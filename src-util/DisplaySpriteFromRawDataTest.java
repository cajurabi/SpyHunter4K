import java.awt.Color;
import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.image.BufferedImage;

import javax.imageio.ImageIO;
import javax.swing.JFrame;
import javax.swing.JPanel;

public final class DisplaySpriteFromRawDataTest extends JFrame
{
	private static Image[] s = new Image[3]; 

	private final JPanel p;

	private  DisplaySpriteFromRawDataTest()
	{
		super("SpyHunter4K");
		setDefaultCloseOperation(3);
		setResizable(false);
		p = new JPanel();
		p.setPreferredSize(new Dimension(480, 480));
		getContentPane().add(p, "Center");
		enableEvents(8L);
		pack();
		Dimension dimension = getToolkit().getScreenSize();
		setLocation((dimension.width >> 1) - (getWidth() >> 1),
		    (dimension.height >> 1) - (getHeight() >> 1));
		show();
	}

	/**
	 * main
	 */
	public static void main(String[] args) throws Exception
	{
		int i, j, w, h;
		boolean doDouble;
		Color[] pal = new Color[16];
		byte[] b = d.getBytes();
		i = j = 0;

		// read palette

		while (j < 16)
		{
			pal[j] = new Color( (b[i++] << 16) |  (b[i++] << 8) |  b[i++], j == 0);
			j++; // 1 byte shorter than having [j++] ... j == 1
		}

		j = 0;
		// Read sprites
		while (i < b.length)
		{
			w = b[i++];
			h = b[i++];

			doDouble = false;
			if ((w & 0x40) != 0)
			{
				doDouble = true;
				w &= 0x3f;
			}
//System.out.println("doDouble = " + doDouble);
//			boolean doFlip = false;
//			if ( (h & 0x40) != 0)
//			{
//				h &= 0x3f;
//				doFlip = true;
//			}

			BufferedImage img = new BufferedImage(doDouble ? w << 1 : w, h, 3);
		    Graphics g = img.getGraphics();

			for (int x = 0; x < w; ++x)
			{
				for (int y = 0; y < h; ++y)
				{
					g.setColor(pal[b[i++] & 0x0f]);
					g.fillRect(x, y, 1, 1);
					if (doDouble)
					{
						g.fillRect( (w << 1) - x - 1, y, 1, 1);
					}
				}
			}

			s[j++] = img;
		}

		new DisplaySpriteFromRawDataTest().run();
	}

	public void run() throws Exception
	{
//		int w = p.getWidth();
//		int h = p.getHeight();

		while (p.isVisible())
		{
			Graphics gf = p.getGraphics();

//			gf.setColor(Color.green);
//			gf.fillRect(0, 0, w, h);

			gf.drawImage(s[0], 0  , 0, null);
			gf.drawImage(s[1], 64 , 0, null);
			gf.drawImage(s[2], 128, 0, null);

			gf.dispose();

			try
			{
			    Thread.sleep(15L);
			}
			catch (Exception e)
			{
				;
			}
		}
	}
	private static final String d =
//null;
		"\1\1\1\133\133\133\22\22\21\1\1\111\1\66\66\1" +
		"\1\1\22\111\176\111\1\155\44\44\44\176\176\176\176\1" +
		"\133\176\1\44\111\22\1\155\21\1\1\1\1\1\1\1" +
		"\115\51\100\101\102\102\103\104\104\104\104\104\103\104\104\105" +
		"\105\100\100\100\100\100\100\100\100\100\104\104\104\104\104\104" +
		"\104\104\104\105\105\100\100\100\100\100\100\100\101\102\101\104" +
		"\104\101\104\101\104\104\103\104\104\104\104\104\104\104\104\104" +
		"\104\104\104\103\104\101\104\101\104\101\104\103\104\105\105\100" +
		"\100\100\100\100\100\101\102\101\104\101\104\101\104\101\104\104" +
		"\103\104\104\103\103\103\103\103\103\103\103\103\103\103\103\103" +
		"\103\103\103\103\103\103\103\103\103\105\101\105\100\100\101\102" +
		"\101\104\104\101\104\101\104\104\103\106\104\105\107\107\107\107" +
		"\107\107\107\107\107\107\107\107\107\107\107\107\107\107\107\107" +
		"\103\105\105\101\105\105\101\101\110\110\105\104\103\104\103\103" +
		"\103\103\105\105\105\107\107\107\111\111\111\107\107\107\111\111" +
		"\111\111\107\107\107\107\107\107\103\105\105\105\101\105\105\101" +
		"\110\105\105\105\105\105\105\105\105\105\105\105\105\105\107\107" +
		"\107\107\107\107\107\107\107\107\107\107\107\107\107\107\107\107" +
		"\103\105\105\105\105\101\105\105\101\105\105\105\105\111\111\105" +
		"\104\101\104\105\111\105\105\103\103\103\103\103\103\103\103\103" +
		"\103\103\103\103\103\103\103\103\105\105\105\105\105\105\101\105" +
		"\105\101\105\105\111\111\111\111\105\104\104\104\105\111\105\105" +
		"\101\101\101\101\101\101\101\101\101\101\101\101\101\101\101\101" +
		"\103\105\105\105\105\105\105\101\105\105\101\111\111\111\105\105" +
		"\105\104\104\104\105\111\111\105\105\101\101\104\101\104\101\104" +
		"\101\104\101\104\101\104\103\104\103\112\105\105\105\105\105\105" +
		"\101\105\105\101\105\105\105\105\111\105\104\104\104\105\111\105" +
		"\105\103\101\104\101\104\101\104\104\104\104\104\104\104\103\104" +
		"\103\103\103\105\105\105\105\105\105\101\105\105\101\105\105\105" +
		"\105\111\105\104\104\105\111\111\105\103\103\101\101\104\101\104" +
		"\104\101\104\104\104\104\104\104\103\104\103\112\105\105\105\105" +
		"\105\105\101\105\105\101\111\111\111\111\111\105\104\104\105\111" +
		"\105\105\103\104\101\104\101\104\101\104\104\104\104\104\103\104" +
		"\103\104\103\103\103\105\105\105\105\105\105\101\105\105\101\105" +
		"\105\105\105\111\105\104\110\105\105\105\105\103\104\101\101\104" +
		"\104\104\104\104\104\104\104\104\103\104\103\104\103\112\105\105" +
		"\105\105\105\105\101\105\105\114\51\100\100\100\100\100\100\101" +
		"\101\111\111\101\101\100\100\100\100\100\100\100\100\100\100\100" +
		"\100\100\101\101\111\111\101\101\100\100\100\100\100\100\100\100" +
		"\100\100\100\100\104\104\104\111\111\111\111\111\111\111\111\111" +
		"\111\111\111\111\111\111\111\111\111\111\104\111\111\111\111\111" +
		"\111\111\111\100\100\100\100\100\100\100\100\100\100\104\111\106" +
		"\111\106\111\106\106\106\106\106\106\106\106\106\106\106\106\106" +
		"\106\106\106\106\106\106\106\106\106\106\106\106\106\111\111\104" +
		"\100\100\100\100\100\104\111\111\111\113\113\113\113\113\113\114" +
		"\113\101\101\111\105\105\105\105\105\105\105\105\111\101\115\115" +
		"\101\101\101\101\106\106\106\106\106\111\101\100\100\100\111\111" +
		"\111\112\112\112\112\112\112\112\112\112\112\105\101\111\105\105" +
		"\105\105\105\105\111\111\105\105\105\105\105\101\101\113\113\113" +
		"\113\104\115\111\100\100\101\111\111\110\110\110\101\101\101\101" +
		"\101\101\101\105\105\110\101\101\101\101\101\101\111\111\105\105" +
		"\105\105\105\101\101\101\111\111\111\110\110\115\115\105\100\101" +
		"\105\111\101\101\101\101\101\101\101\101\101\101\105\110\110\105" +
		"\111\111\111\111\111\111\111\101\101\101\101\101\101\101\101\101" +
		"\101\111\113\104\115\111\105\100\101\105\101\101\101\101\111\101" +
		"\101\101\101\101\105\110\110\105\101\111\111\111\111\111\111\111" +
		"\111\111\111\101\105\105\105\104\101\101\101\101\104\104\111\101" +
		"\105\101\105\111\101\111\111\111\111\111\111\101\101\105\110\110" +
		"\105\111\111\111\111\111\111\111\111\111\111\101\105\105\105\105" +
		"\105\110\101\101\101\101\104\111\101\101\101\111\111\101\105\105" +
		"\111\111\111\111\111\111\105\110\110\105\111\111\111\111\111\111" +
		"\111\111\111\111\101\105\105\105\105\105\105\110\101\101\101\104" +
		"\111\110\101\101\111\111\101\101\105\111\111\111\111\101\101\105" +
		"\110\110\105\111\111\111\111\111\111\111\111\111\111\101\105\105" +
		"\105\105\105\105\110\101\101\101\101\111\101\101\101\111\111\101" +
		"\101\105\111\101\111\101\101\101\105\110\110\105\111\111\111\111" +
		"\111\111\111\111\111\111\101\105\105\105\105\105\105\105\101\101" +
		"\101\104\111\101\105\111\40\100\100\100\100\100\100\104\100\100" +
		"\100\100\100\100\100\100\100\100\100\100\100\100\100\100\100\100" +
		"\100\100\100\100\100\100\100\100\100\100\100\100\100\104\100\100" +
		"\112\101\112\100\100\100\100\100\100\100\100\100\100\101\100\100" +
		"\100\100\100\100\100\100\100\100\100\100\100\100\115\115\101\112" +
		"\101\112\101\112\100\100\100\100\112\107\112\100\100\101\100\100" +
		"\100\100\100\100\100\100\100\100\100\100\100\100\115\115\112\112" +
		"\112\112\112\101\112\100\100\112\107\103\107\107\107\114\114\100" +
		"\100\100\100\100\100\100\100\100\100\100\100\100\105\115\105\100" +
		"\100\100\112\112\112\112\100\107\107\107\103\103\107\107\114\100" +
		"\100\100\100\100\100\100\100\100\100\100\100\100\105\105\105\100" +
		"\100\100\112\101\112\112\112\112\107\107\107\107\103\104\104\104" +
		"\100\100\100\100\100\100\100\100\100\100\113\101\105\101\105\100" +
		"\115\115\112\112\101\112\112\112\112\112\107\107\107\103\104\104" +
		"\104\102\113\101\100\100\100\105\105\105\101\104\104\101\104\115" +
		"\111\115\115\114\112\112\112\112\112\112\103\107\107\103\104\104" +
		"\104\105\101\101\105\111\104\105\111\104\101\111\104\104\105\115" +
		"\111\111\115\105\112\112\112\112\112\112\103\107\107\103\105\104" +
		"\104\101\101\101\105\105\105";

}
